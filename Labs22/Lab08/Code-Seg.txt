-----------------------------------------------------------// 修改ProductDao類別void  addProduct(BookBean product);CompanyBean  getCompanyById(int companyId);List<CompanyBean>  getCompanyList();-----------------------------------------------------------// 修改ProductDaoImpl類別@Overridepublic void addProduct(BookBean product) {    Session session = factory.getCurrentSession();    CompanyBean cb = getCompanyById(product.getCompanyId());    product.setCompanyBean(cb);    session.save(product);}@Overridepublic CompanyBean getCompanyById(int companyId) {    CompanyBean cb = null;    Session session = factory.getCurrentSession();    cb = session.get(CompanyBean.class, companyId);    return cb;}@Overridepublic List<CompanyBean> getCompanyList() {	Session session = factory.getCurrentSession();    String hql = "FROM CompanyBean";    List<CompanyBean> list = session.createQuery(hql, CompanyBean.class)    		                        .getResultList();    return list;}-----------------------------------------------------------// 修改ProductService類別void  addProduct(BookBean product);CompanyBean  getCompanyById(int companyId);List<CompanyBean>  getCompanyList();-----------------------------------------------------------// 修改ProductServiceImpl類別@Transactional@Overridepublic void addProduct(BookBean product) {	productDao.addProduct(product);}@Transactional@Overridepublic CompanyBean getCompanyById(int companyId) {	return productDao.getCompanyById(companyId);}@Transactional@Overridepublic List<CompanyBean> getCompanyList() {	return productDao.getCompanyList();}-----------------------------------------------------------// 修改ProductController類別public String getAddNewProductForm(Model model)public String processAddNewProductForm	(@ModelAttribute("bookBean") BookBean bb) public Map<Integer, String> getCompanyList()public List<String> getCategoryList()@GetMapping("/products/add")public String getAddNewProductForm(Model model) {    BookBean bb = new BookBean();    model.addAttribute("bookBean", bb);     return "addProduct";}@PostMapping("/products/add")public String processAddNewProductForm(		@ModelAttribute("bookBean") BookBean bb) { 	productService.addProduct(bb);    return "redirect:/products";}@ModelAttribute("companyList")public Map<Integer, String> getCompanyList() {    Map<Integer, String> companyMap = new HashMap<>();    List<CompanyBean> list = productService.getCompanyList();    for (CompanyBean cb : list) {        companyMap.put(cb.getId(), cb.getName());    }    return companyMap;}@ModelAttribute("categoryList")public List<String> getCategoryList() {    return productService.getAllCategories();}@Overrideprotected Filter[] getServletFilters() {	CharacterEncodingFilter characterEncodingFilter = new CharacterEncodingFilter();	characterEncodingFilter.setEncoding("UTF-8");	return new Filter[] {characterEncodingFilter};}if (bb.getStock() == null) {	bb.setStock(0);}